{"version":3,"file":"static/js/209.b2457db7.chunk.js","mappings":"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","sources":["components/Button.js","components/CustomInputText.js","components/CustomSelect.js","components/customer/CreateCustomerModal.js","components/customer/CustomerManagement.js","components/customer/CustomerTable.js"],"sourcesContent":["import React from 'react'\r\n\r\nexport default function Button ({ onClick, title, type = 'button' }) {\r\n  return (\r\n    <div>\r\n      <button onClick={() => onClick()} type={type} className={`text-gray-700 bg-white ${type === 'Primary' && 'bg-textPrimary text-primary hover:text-textPrimary'} border border-gray-300 focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2 dark:bg-gray-800 dark:text-white dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700`}>{title}</button>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction CustomInputText ({ field, handleFieldChange }) {\r\n  return (\r\n    <div>\r\n      <div className=\"relative z-0\">\r\n        <input value={field.value} onChange={(e) => handleFieldChange(field.name, e.target.value, field.type)} type={field.type === 'date' ? 'date' : 'text'} id={field.name}\r\n          required={field.required}\r\n          aria-describedby=\"standard_success_help\" className={`block py-2.5 px-0 w-full text-sm text-textAccent bg-transparent border-0 border-b-2 border-textAccent appearance-none dark:text-white dark:border-green-500 dark:focus:border-green-500 focus:outline-none focus:ring-0 peer ${field.disabled === true ? 'cursor-not-allowed' : ''}`} placeholder=\" \" />\r\n        <label htmlFor={field.name} className=\"absolute text-sm text-textAccent dark:text-green-500 duration-300 transform -translate-y-5 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-5 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto\">{field.label}</label>\r\n      </div>\r\n      {/* <p id=\"standard_success_help\" class=\"mt-2 text-xs text-green-600 dark:text-green-400\"><span class=\"font-medium\">Well done!</span> Some success message.</p> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CustomInputText\r\n","import React from 'react'\r\n\r\nexport default function CustomSelect ({ field, handleFieldChange }) {\r\n  console.log(field.label)\r\n  return (\r\n    <div className=\"relative z-0\"><label htmlFor={field.name} className=\"absolute text-sm text-textAccent dark:text-green-500 duration-300 transform -translate-y-5 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-5 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto\">{field.label}</label><select\r\n      id={field.name}\r\n      value={field.value}\r\n      onChange={(e) => handleFieldChange(field.name, e.target.value, field.type)}\r\n      className=\"mt-3 p-1 border rounded w-full cursor-pointer\"\r\n      required\r\n    >\r\n      <option selected disabled key={field.value}>\r\n                                Select {field.label}\r\n      </option>\r\n      {field.options.map((option) => (\r\n        <option key={option.name} value={option.value}>\r\n          {option.name}\r\n        </option>\r\n      ))}\r\n    </select> </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport ErrorBoundary from '../../ErrorBoundary'\r\nimport Button from '../Button'\r\nimport CustomInputText from '../CustomInputText'\r\nimport CustomSelect from '../CustomSelect'\r\nimport { decryptFromStorage } from '../../lib/SecureStorage'\r\nimport httpClientRequest from '../../lib/httpClientRequest'\r\n\r\nconst userData = decryptFromStorage('user')\r\n\r\nexport default function CreateCustomerModal ({ closeModal }) {\r\n  const defaultFields = [\r\n    { name: 'customer_name', label: 'Customer name ', value: '', required: true },\r\n    { name: 'customer_trading_as', label: 'Customer Trading As', value: '', required: true },\r\n    { name: 'ABN_no', label: 'ABN no', value: '', required: true },\r\n    { name: 'ACN_no', label: 'ACN no', value: '', required: true },\r\n    { name: 'website', label: 'Website', value: '', required: true },\r\n    { name: 'local_overseas_customer', label: 'Local / Overseas customer ', value: 'local', required: true, options: [{ name: 'local' }, { name: 'international' }] },\r\n    { name: 'customer_address', label: 'Customer address ', value: '', required: true },\r\n    { name: 'country', label: 'Country', value: '', required: true },\r\n    { name: 'state', label: 'State', value: '', required: true },\r\n    { name: 'suburb', label: 'Suburb', value: '', required: true },\r\n    { name: 'postcode', label: 'Postcode', value: '', type: 'number', required: true },\r\n    { name: 'contact_person_name', label: 'Contact person name', value: '', required: true },\r\n    { name: 'phone_number ', label: 'Phone number', value: '', required: true, type: 'number' },\r\n    { name: 'email', label: 'Email', value: '', required: true },\r\n    { name: 'customer_category', label: 'Customer category', value: 'One off customer', required: true, options: [{ name: 'Key customer' }, { name: 'Regular customer' }, { name: 'One off customer' }] },\r\n    { name: 'customer_type', label: 'Customer type', value: '', required: true },\r\n    { name: 'data_shared_with_customer', label: 'Data shared with customer', value: '', required: true },\r\n    { name: 'department_managing_customer', label: 'Department managing customer', value: '', required: true },\r\n    { name: 'customer_manager', label: 'Customer manager', value: '', required: true },\r\n    { name: 'contract_commencement_date', label: 'Contract Commencement date', value: '', required: true, type: 'date' },\r\n    { name: 'contract_end_date', label: 'Contract end date', value: '', type: 'date', required: false },\r\n    { name: 'sensitivity_of_data_involved', label: 'Sensitivity of data involved', value: 'Availability', required: true, options: [{ name: 'Confidentiality' }, { name: 'Integrity' }, { name: 'Availability' }] },\r\n    { name: 'customer_agreement', label: 'Customer agreement', value: 'No', required: true, options: [{ name: 'Yes ' }, { name: 'No' }] },\r\n    { name: 'customer_approval_status', label: 'Customer approval status', value: 'Draft', required: true, options: [{ name: 'Draft ' }, { name: 'approved' }, { name: 'rejected' }] },\r\n    { name: 'date_entered', label: 'Date entered', value: '', type: 'date', required: true }\r\n  ]\r\n\r\n  const [fields, setFields] = useState(defaultFields)\r\n\r\n  const handleFieldChange = (name, value, type) => {\r\n    const numericRegex = /^[0-9]*$/\r\n    if (type === 'number' && !numericRegex.test(value)) return\r\n\r\n    setFields((prevFields) => {\r\n      const fieldIndex = prevFields.findIndex((field) => field.name === name)\r\n      const updatedFields = [...prevFields]\r\n      updatedFields[fieldIndex].value = value\r\n      return updatedFields\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    submitData()\r\n  }\r\n\r\n  const submitData = async () => {\r\n    const mappedData = fields.reduce((acc, cur) => {\r\n      return { ...acc, [cur.name]: cur.value }\r\n    }, {})\r\n\r\n    mappedData.company_id = userData?.company_id\r\n    const result = await httpClientRequest.post('customer/', { customer: mappedData })\r\n    alert(result.message)\r\n    closeModal()\r\n  }\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <form onSubmit={(e) => handleSubmit(e)}>\r\n        <div className=\"fixed inset-0 z-10 overflow-y-auto rounded-lg \">\r\n          <div className=\"flex items-end justify-center min-h-screen h-40 pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n            <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n              <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n            </div>\r\n            {/* ... (unchanged code) */}\r\n            <div className=\"inline-block align-bottom bg-white border-2 rounded-lg text-left shadow-xl transform transition-all sm:my-8 sm:align-middle w-[70vh]\">\r\n              {/* Modal content */}\r\n              <div className=\"bg-secondary px-4 rounded-lg pt-5 pb-4 sm:p-6 sm:pb-4 !important rounded-lg\">\r\n                <div className=\"border p-4 bg-primary rounded-lg\">\r\n                  <div className='pb-5'>\r\n                    <h2 className=\"text-lg font-semibold mb-4\">Create Customer</h2>\r\n                    {\r\n                      fields.map(f => (\r\n                        <div className='mt-2' key={f.name}>{\r\n                          f.options\r\n                            ? (<CustomSelect key={f.name} handleFieldChange={(name, value, type) => handleFieldChange(name, value, type)} field={f} />)\r\n                            : (\r\n                              <CustomInputText key={f.name} handleFieldChange={(name, value, type) => handleFieldChange(name, value, type)} field={f} />\r\n                            )\r\n                        }\r\n                        </div>\r\n                      )\r\n                      )\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse rounded-lg\">\r\n                <Button\r\n                  onClick={() => {}}\r\n                  type=\"Primary\"\r\n                  title=\"Save\"\r\n                />\r\n\r\n                <Button\r\n                  onClick={() => closeModal()}\r\n                  title=\"Cancel\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </ErrorBoundary>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Button from '../Button'\r\nimport CreateCustomerModal from './CreateCustomerModal'\r\nimport httpClientRequest from '../../lib/httpClientRequest'\r\nimport { decryptFromStorage } from '../../lib/SecureStorage'\r\nimport CustomerTable from './CustomerTable'\r\nconst userData = decryptFromStorage('user')\r\nexport default function CustomerManagement () {\r\n  const [modal, viewModal] = useState(false)\r\n  const [customerData, setCustomerData] = useState(null)\r\n\r\n  useEffect(() => {\r\n    fetchData()\r\n  }, [modal, customerData])\r\n\r\n  const fetchData = async () => {\r\n    const result = await httpClientRequest.get(`customer/${userData.company_id}`)\r\n    console.log(result)\r\n    setCustomerData(result.data)\r\n  }\r\n\r\n  return (\r\n    <div className='bg-primary w-full h-full'>\r\n      <div className='m-10 gap-2 flex flex-col'>\r\n        {modal && <CreateCustomerModal closeModal={() => viewModal(false)} />}\r\n        <div className='flex justify-between'>\r\n          <Button title=\"Create Customer\" type=\"Primary\" onClick={() => viewModal(true)}/>\r\n          <Button title=\"Fetch Data\" onClick={() => viewModal(!modal)}/>\r\n        </div>\r\n        <div className='divider border-b-2'></div>\r\n        <div className='w-[100rem]'>\r\n          { customerData && <CustomerTable filteredCustomer={customerData}/> }\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport Select from 'react-select'\r\nimport CreateSupplierModal from '../CreateSupplierModal'\r\n// import Tree from './TreeNode'\r\n// import FilePreview from '../FilePreview'\r\nconst CustomerTable = ({ filteredCustomer, handleDelete }) => {\r\n  const [viewCreateModal, setViewCreateModal] = useState(false)\r\n  const [updateData, setUpdateData] = useState([{}])\r\n  console.log('filtered', filteredCustomer)\r\n  const headers = [\r\n    { name: 'customer_name', label: 'Customer name ', value: '', required: true },\r\n    { name: 'customer_trading_as', label: 'Customer Trading As', value: '', required: true },\r\n    { name: 'ABN_no', label: 'ABN no', value: '', required: true },\r\n    { name: 'ACN_no', label: 'ACN no', value: '', required: true },\r\n    { name: 'website', label: 'Website', value: '', required: true },\r\n    { name: 'local_overseas_customer', label: 'Local / Overseas customer ', value: 'local', required: true, options: [{ name: 'local' }, { name: 'international' }] },\r\n    { name: 'customer_address', label: 'Customer address ', value: '', required: true },\r\n    { name: 'country', label: 'Country', value: '', required: true },\r\n    { name: 'state', label: 'State', value: '', required: true },\r\n    { name: 'suburb', label: 'Suburb', value: '', required: true },\r\n    { name: 'postcode', label: 'Postcode', value: '', type: 'number', required: true },\r\n    { name: 'contact_person_name', label: 'Contact person name', value: '', required: true },\r\n    { name: 'phone_number ', label: 'Phone number', value: '', required: true, type: 'number' },\r\n    { name: 'email', label: 'Email', value: '', required: true },\r\n    { name: 'customer_category', label: 'Customer category', value: 'One off customer', required: true, options: [{ name: 'Key customer' }, { name: 'Regular customer' }, { name: 'One off customer' }] },\r\n    { name: 'customer_type', label: 'Customer type', value: '', required: true },\r\n    { name: 'data_shared_with_customer', label: 'Data shared with customer', value: '', required: true },\r\n    { name: 'department_managing_customer', label: 'Department managing customer', value: '', required: true },\r\n    { name: 'customer_manager', label: 'Customer manager', value: '', required: true },\r\n    { name: 'contract_commencement_date', label: 'Contract Commencement date', value: '', required: true, type: 'date' },\r\n    { name: 'contract_end_date', label: 'Contract end date', value: '', type: 'date', required: false },\r\n    { name: 'sensitivity_of_data_involved', label: 'Sensitivity of data involved', value: 'Availability', required: true, options: [{ name: 'Confidentiality' }, { name: 'Integrity' }, { name: 'Availability' }] },\r\n    { name: 'customer_agreement', label: 'Customer agreement', value: 'No', required: true, options: [{ name: 'Yes ' }, { name: 'No' }] },\r\n    { name: 'customer_approval_status', label: 'Customer approval status', value: 'Draft', required: true, options: [{ name: 'Draft ' }, { name: 'approved' }, { name: 'rejected' }] },\r\n    { name: 'date_entered', label: 'Date entered', value: '', type: 'date', required: true }\r\n  ]\r\n\r\n  const [columnVisibility, setColumnVisibility] = useState(\r\n    headers.reduce((acc, { name }) => {\r\n      acc[name] = true // Initialize all columns as visible\r\n      return acc\r\n    }, {})\r\n  )\r\n  const toggleColumnVisibility = (name) => {\r\n    setColumnVisibility((prevVisibility) => ({\r\n      ...prevVisibility,\r\n      [name]: !prevVisibility[name]\r\n    }))\r\n  }\r\n  const options = headers.map((item) => ({\r\n    label: item.label,\r\n    value: item.name\r\n  }))\r\n\r\n  const updateSupplier = (data) => {\r\n    setUpdateData(data)\r\n    setViewCreateModal(true)\r\n  }\r\n\r\n  const updateSupplierSubmit = (data) => {\r\n    console.log(data)\r\n  }\r\n\r\n  const closeModal = () => setViewCreateModal(false)\r\n\r\n  const newSupplier = () => {\r\n    setViewCreateModal(false)\r\n  }\r\n\r\n  return (\r\n    <div className=\"scollbar overflow-y-auto overflow-x-auto shadow-md sm:rounded-lg p-5\">\r\n      <div className=\"mb-4\">\r\n        <label htmlFor='filter'>Filter Table</label>\r\n        <Select\r\n          id=\"filter\"\r\n          options={options}\r\n          isMulti\r\n          value={options.filter((option) => columnVisibility[option.value])}\r\n          onChange={(selectedOptions) => {\r\n            const newVisibility = options.reduce((acc, option) => {\r\n              acc[option.value] = selectedOptions.some((selected) => selected.value === option.value)\r\n              return acc\r\n            }, {})\r\n            setColumnVisibility(newVisibility)\r\n          }}\r\n        />\r\n      </div>\r\n      <div className='scrollbar border-2 overflow-x-auto '>\r\n        <table className=\"scollbar overflow-x-auto w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400\">\r\n          <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"px-6 py-3\">\r\n              Action\r\n              </th>\r\n              {headers.map((item) =>\r\n                columnVisibility[item?.name]\r\n                  ? (\r\n                    <th key={item?.name} scope=\"col\" className=\"border p-2 whitespace-nowrap\">\r\n                      <span>{item.label}</span>\r\n                    </th>\r\n                  )\r\n                  : null\r\n              )}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredCustomer && filteredCustomer.map((customer) => (\r\n              <tr key={customer} className=\"bg-white border-b dark:bg-gray-800 dark:border-gray-700 hover:bg-gray-200 cursor-pointer dark:hover:bg-gray-600\">\r\n                <td className=\"flex flex-row px-6 py-4 gap-2 items-center align-center justify-center\">\r\n                  <a href=\"#\" className=\"font-medium text-blue-600 dark:text-blue-500 hover:underline\">\r\n                  Edit\r\n                  </a>\r\n                  <a onClick={() => handleDelete(customer.id)} href=\"#\" className=\"font-medium text-red-500 dark:text-blue-500 hover:underline\">\r\n                  Delete\r\n                  </a>\r\n                </td>\r\n                {headers.map((item) =>\r\n                  columnVisibility[item.name]\r\n                    ? (\r\n                      <td key={`${[customer.id]}-${item.name}`} className=\"border p-2\">\r\n                        {/* {JSON.stringify(customer.data)} */}\r\n                        {customer[item.name]}\r\n                      </td>\r\n                    )\r\n                    : null\r\n                )}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default CustomerTable\r\n"],"names":["Button","_ref","onClick","title","type","_jsx","children","className","concat","field","handleFieldChange","_jsxs","value","onChange","e","name","target","id","required","disabled","placeholder","htmlFor","label","CustomSelect","console","log","selected","options","map","option","userData","decryptFromStorage","CreateCustomerModal","closeModal","fields","setFields","useState","test","prevFields","fieldIndex","findIndex","updatedFields","submitData","async","mappedData","reduce","acc","cur","company_id","result","httpClientRequest","post","customer","alert","message","ErrorBoundary","onSubmit","preventDefault","handleSubmit","f","CustomInputText","CustomerManagement","modal","viewModal","customerData","setCustomerData","useEffect","fetchData","get","data","CustomerTable","filteredCustomer","handleDelete","viewCreateModal","setViewCreateModal","updateData","setUpdateData","headers","columnVisibility","setColumnVisibility","_ref2","item","Select","isMulti","filter","selectedOptions","newVisibility","some","scope","href"],"sourceRoot":""}