{"version":3,"file":"static/js/349.74a2f244.chunk.js","mappings":"4NAKA,MAAMA,GAAWC,EAAAA,EAAAA,GAAmB,QACrB,SAASC,EAAeC,GAGnC,IAHqC,aACvCC,EAAY,WAAEC,EAAU,WAAEC,EAAU,OAAEC,GAAS,EAAK,WACpDC,EAAa,CAAC,GACfL,EACC,MAAOM,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAQC,IAAaF,EAAAA,EAAAA,UAAS,CACnC,CAAEG,KAAM,WAAYC,MAAO,WAAYC,MAAO,IAC9C,CAAEF,KAAM,QAASC,MAAO,QAASC,MAAO,IACxC,CAAEF,KAAM,aAAcC,MAAO,aAAcC,MAAO,IAClD,CAAEF,KAAM,YAAaC,MAAO,YAAaC,MAAO,IAChD,CAAEF,KAAM,aAAcC,MAAO,aAAcC,MAAO,IAClD,CAAEF,KAAM,WAAYC,MAAO,WAAYC,MAAO,IAC9C,CAAEF,KAAM,WAAYC,MAAO,YAAaC,MAAO,GAAIC,KAAM,UACzD,CAAEH,KAAM,eAAgBC,MAAO,eAAgBC,MAAO,IACtD,CAAEF,KAAM,UAAWC,MAAO,UAAWC,MAAO,IAC5C,CAAEF,KAAM,QAASC,MAAO,QAASC,MAAO,IACxC,CAAEF,KAAM,SAAUC,MAAO,SAAUC,MAAO,IAC1C,CAAEF,KAAM,kBAAmBC,MAAO,kBAAmBC,MAAO,GAAIC,KAAM,QACtE,CAAEH,KAAM,MAAOC,MAAO,MAAOC,MAAO,MACpC,CAAEF,KAAM,OAAQC,MAAO,OAAQC,MAAO,YA4DxCE,EAAAA,EAAAA,YAAU,KACRC,IACAC,QAAQC,IAAId,GACRA,GAlByBe,WAC7B,IAEET,GAAWU,IACT,MAAMC,EAAgB,IAAID,GAI1B,OAHAC,EAAcC,SAASC,IACrBA,EAAMV,MAAQR,EAAWkB,EAAMZ,OAAS,EAAE,IAErCU,CAAa,GAExB,CAAE,MAAOG,GACPP,QAAQO,MAAM,wCAAyCA,EACzD,GAOEC,GArCoBN,WACtB,MAAMO,QAAqBC,EAAAA,EAAkBC,IAAI,iCAADC,OAA0C,OAARhC,QAAQ,IAARA,OAAQ,EAARA,EAAUiC,aAC5Fb,QAAQC,IAAIQ,GACZhB,GAAWU,IAAgB,IAADW,EACxB,MAAMV,EAAgB,IAAID,GAEpBY,EAAgBZ,EAAWa,WAAWV,GAAyB,eAAfA,EAAMZ,OACtDuB,EAAQ,GAOd,OANAR,EAAaS,KAAKb,SAAQc,IACxBF,EAAMG,KAAK,CAAExB,MAAOuB,EAAKE,GAAI3B,KAAMyB,EAAKG,iBAAkB,IAE5DtB,QAAQC,IAAI,QAASgB,GACrBb,EAAcW,GAAeQ,QAAUN,EACvCb,EAAcW,GAAenB,MAAgB,QAAXkB,EAAGG,EAAM,UAAE,IAAAH,OAAA,EAARA,EAAUlB,MACxCQ,CAAa,GACpB,EAwBFoB,EAAiB,GAChB,IAEH,MAAMzB,EAAYG,UAChB,IACE,MAAMuB,QAAiBf,EAAAA,EAAkBC,IAAI,uDAC7CX,QAAQC,IAAIwB,GACZhC,GAAWU,IACT,MAAMuB,EAAiBvB,EAAWa,WAAWV,GAAyB,SAAfA,EAAMZ,OACvDU,EAAgB,IAAID,GAC1BC,EAAcsB,GAAgBH,QAAkB,OAARE,QAAQ,IAARA,OAAQ,EAARA,EAAUP,KASlD,OAPAd,EADYD,EAAWa,WAAWV,GAAyB,QAAfA,EAAMZ,QAC/B6B,QAAU,CAAC,CAC5B7B,KAAM,OAER,CACEA,KAAM,OAGDU,CAAa,GAExB,CAAE,MAAOG,GACPP,QAAQO,MAAM,wBAAyBA,EACzC,GAGIoB,EAAoB,SAACjC,EAAME,GAA0B,IAAnBC,EAAI+B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,OAE7C5B,QAAQC,IAAI,OAAQJ,IACP,WAATA,GAFiB,WAEkBkC,KAAKnC,KAE5CH,GAAWU,IACT,MAAM6B,EAAa7B,EAAWa,WAAWV,GAAUA,EAAMZ,OAASA,IAC5DU,EAAgB,IAAID,GAE1B,OADAC,EAAc4B,GAAYpC,MAAQA,EAC3BQ,CAAa,GAExB,EAaA,OACE6B,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CAAAC,UACZF,EAAAA,EAAAA,KAAA,QAAMG,SAAWC,GAnHLnC,WACdmC,EAAEC,iBAEF,MAAMC,EAAO,CAAC,EACd/C,EAAOa,SAASC,IACdiC,EAAKjC,EAAMZ,MAAQY,EAAMV,KAAK,IAGhCN,EAAS,IAAID,EAAOkD,IAEpB,MAAMC,EAAahD,EAAOiD,QAAO,CAACC,EAAKC,KAC9B,IAAKD,EAAK,CAACC,EAAIjD,MAAOiD,EAAI/C,SAChC,CAAC,GAGJ,IAAIgD,EAFJJ,EAAW3B,WAAqB,OAARjC,QAAQ,IAARA,OAAQ,EAARA,EAAUiC,WAClCb,QAAQC,IAAI,eAAgBrB,GAK1BgE,EAHGzD,QAGYuB,EAAAA,EAAkBmC,IAAI,WAADjC,OAAYxB,EAAWiC,IAAMmB,SAFlD9B,EAAAA,EAAkBoC,KAAK,QAASN,GAIjDtD,EAAW0D,EAAO,EA8FOG,CAAQV,GAAGF,UAChCF,EAAAA,EAAAA,KAAA,OAAKe,UAAU,qCAAoCb,UACjDc,EAAAA,EAAAA,MAAA,OAAKD,UAAU,8FAA6Fb,SAAA,EAC1GF,EAAAA,EAAAA,KAAA,OAAKe,UAAU,mCAAmC,cAAY,OAAMb,UAClEF,EAAAA,EAAAA,KAAA,OAAKe,UAAU,+CAGjBC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,8HAA6Hb,SAAA,EAE1IF,EAAAA,EAAAA,KAAA,OAAKe,UAAU,oDAAmDb,UAChEc,EAAAA,EAAAA,MAAA,OAAKD,UAAU,aAAYb,SAAA,EACzBF,EAAAA,EAAAA,KAAA,MAAIe,UAAU,6BAA4Bb,SAAC,sBACzC3C,EAAOqC,OAAS,GAChBrC,EAAO0D,KAAK5C,IACV2B,EAAAA,EAAAA,KAAA,OAAsBe,UAAU,oBAAmBb,SAChD7B,EAAMiB,SAEH0B,EAAAA,EAAAA,MAAAE,EAAAA,SAAA,CAAAhB,SAAA,EAAEF,EAAAA,EAAAA,KAAA,SAAOmB,QAAS9C,EAAMZ,KAAMsD,UAAU,4TAA2Tb,SAAE7B,EAAMX,SAAcsD,EAAAA,EAAAA,MAAA,UACvX5B,GAAIf,EAAMZ,KACVE,MAAOU,EAAMV,MACbyD,SAAWhB,GAAMV,EAAkBrB,EAAMZ,KAAM2C,EAAEiB,OAAO1D,MAAOU,EAAMT,MACrEmD,UAAU,iCACVO,UAAQ,EAAApB,SAAA,EAERc,EAAAA,EAAAA,MAAA,UAAQO,UAAQ,EAAArB,SAAA,CAAmB,UACzB7B,EAAMX,QADMW,EAAMV,OAG3BU,EAAMiB,QAAQ2B,KAAKO,IAClBxB,EAAAA,EAAAA,KAAA,UAA0BrC,MAAO6D,EAAO7D,MAAMuC,SAC3CsB,EAAO/D,MADG+D,EAAO/D,eAOxBuC,EAAAA,EAAAA,KAAA,OAAAE,UACEc,EAAAA,EAAAA,MAAA,OAAKD,UAAU,eAAcb,SAAA,EAC3BF,EAAAA,EAAAA,KAAA,SAAOrC,MAAOU,EAAMV,MAAOyD,SAAWhB,GAAMV,EAAkBrB,EAAMZ,KAAM2C,EAAEiB,OAAO1D,MAAOU,EAAMT,MAAOA,KAAqB,SAAfS,EAAMT,KAAkB,OAAS,OAAQwB,GAAIf,EAAMZ,KAAM,mBAAiB,wBAAwBsD,UAAU,+NAA+NU,YAAY,OACpczB,EAAAA,EAAAA,KAAA,SAAOmB,QAAS9C,EAAMZ,KAAMsD,UAAU,4TAA2Tb,SAAE7B,EAAMX,cAxBzWW,EAAMZ,cAiCxBuD,EAAAA,EAAAA,MAAA,OAAKD,UAAU,2DAA0Db,SAAA,EACvEF,EAAAA,EAAAA,KAAA,UACEpC,KAAK,SACL8D,QAASA,KA9DvBlE,GAAWU,IACT,MAAMC,EAAgB,IAAID,GAI1B,OAHAC,EAAcC,SAASC,IACrBA,EAAMV,MAAQ,EAAE,IAEXQ,CAAa,SAEtBnB,KAwDc+D,UAAU,0QAAyQb,SACpR,YAIDF,EAAAA,EAAAA,KAAA,UAAQpC,KAAK,SAASmD,UAAU,qCAAoCb,UAAc,IAAXhD,EAAmB,cAAgB,4BAQ1H,C,gGC5MA,MAsFA,EAtFc,CACZyE,YAAa7E,IAAA,IAAC,oBAAE8E,EAAmB,iBAAEC,GAAkB/E,EAAA,OACrDkD,EAAAA,EAAAA,KAAA,OAAKe,UAAU,qCAAoCb,UACjDc,EAAAA,EAAAA,MAAA,OAAKD,UAAU,yFAAwFb,SAAA,EACrGF,EAAAA,EAAAA,KAAA,OAAKe,UAAU,mCAAmC,cAAY,OAAMb,UAClEF,EAAAA,EAAAA,KAAA,OAAKe,UAAU,+CAGjBf,EAAAA,EAAAA,KAAA,QAAMe,UAAU,qDAAqD,cAAY,OAAMb,SAAC,YAIxFc,EAAAA,EAAAA,MAAA,OAAKD,UAAU,2JAA0Jb,SAAA,EAEvKF,EAAAA,EAAAA,KAAA,OAAKe,UAAU,yCAAwCb,UACrDF,EAAAA,EAAAA,KAAA,OAAKe,UAAU,yBAAwBb,UACrCc,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gDAA+Cb,SAAA,EAC5DF,EAAAA,EAAAA,KAAA,MAAIe,UAAU,oCAAmCb,SAAC,sBAClDF,EAAAA,EAAAA,KAAA,OAAKe,UAAU,OAAMb,UACnBF,EAAAA,EAAAA,KAAA,KAAGe,UAAU,wBAAuBb,SAAC,yDAO7Cc,EAAAA,EAAAA,MAAA,OAAKD,UAAU,2DAA0Db,SAAA,EACvEF,EAAAA,EAAAA,KAAA,UACEpC,KAAK,SACL8D,QAASE,EACTb,UAAU,iQAAgQb,SAC3Q,aAGDF,EAAAA,EAAAA,KAAA,UACEpC,KAAK,SACL8D,QAASG,EACTd,UAAU,0QAAyQb,SACpR,qBAMH,EAER4B,aAAcC,IAAA,IAAC,mBAAEC,EAAkB,iBAAEH,EAAgB,IAAEI,EAAG,KAAEC,EAAI,KAAEC,GAAMJ,EAAA,OACtE/B,EAAAA,EAAAA,KAAA,OAAKe,UAAU,qCAAoCb,UACjDc,EAAAA,EAAAA,MAAA,OAAKD,UAAU,8FAA6Fb,SAAA,EAC1GF,EAAAA,EAAAA,KAAA,OAAKe,UAAU,mCAAmC,cAAY,OAAMb,UAClEF,EAAAA,EAAAA,KAAA,OAAKe,UAAU,0CAA0CW,QAASG,OAGpE7B,EAAAA,EAAAA,KAAA,QAAMe,UAAU,qDAAqD,cAAY,OAAMb,SAAC,YAIxFc,EAAAA,EAAAA,MAAA,OAAKD,UAAU,8HAA6Hb,SAAA,EAE1IF,EAAAA,EAAAA,KAAA,OAAKe,UAAU,oDAAmDb,UAChEF,EAAAA,EAAAA,KAACoC,IAAU,CACTC,SAAUJ,EACVK,SAAUJ,OAGdlB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,2DAA0Db,SAAA,EACvEF,EAAAA,EAAAA,KAAA,UACEpC,KAAK,SACL8D,QAASG,EACTd,UAAU,0QAAyQb,SACpR,YAIDF,EAAAA,EAAAA,KAAA,KACEuC,KAAI,2DAAA5D,OAA6DwD,GACjEpB,UAAU,0QAAyQb,SACpR,uBAMH,E,4KCjFV,MAmIA,EAnIuBsC,KAAO,IAADC,EAC3B,MAAOrF,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BoF,EAAWC,IAAgBrF,EAAAA,EAAAA,UAAS,KACpCsF,EAAYC,IAAiBvF,EAAAA,EAAAA,UAAS,KACtCwF,EAAiBC,IAAsBzF,EAAAA,EAAAA,WAAS,IAChD0F,EAAcC,IAAmB3F,EAAAA,EAAAA,UAAS,OAC1C4F,EAAaC,IAAgB7F,EAAAA,EAAAA,WAAS,IACtC8F,EAAWC,IAAgB/F,EAAAA,EAAAA,WAAS,IACpCH,EAAYmG,IAAiBhG,EAAAA,EAAAA,UAAS,KACtCiG,EAAWC,IAAgBlG,EAAAA,EAAAA,UAAS,IAOrCN,EAAaA,KACjB+F,GAAmB,GACnBO,EAAc,IACdE,GAAa,EAAM,GASrB3F,EAAAA,EAAAA,YAAU,KACR4F,GAAU,GACT,CAACZ,IAEJ,MAAMY,EAAWxF,UACf4E,GAAc,GACd,MAAMa,GAAc9G,EAAAA,EAAAA,GAAmB,QACjC+G,QAAiBlF,EAAAA,EAAkBC,IAAI,qBAADC,OAAsB+E,EAAY9E,cAClD,IAAxB+E,EAASC,YAAsBC,MAAMF,EAASG,SAClDzG,EAASsG,GACT5F,QAAQC,IAAI2F,GACZd,GAAc,EAAM,EAQhBhB,EAAmBA,KACvBsB,GAAa,GACbF,EAAgB,MAChBJ,GAAc,EAAM,EAkBtB,OACE7B,EAAAA,EAAAA,MAAA,OAAKD,UAAU,qDAAoDb,SAAA,CAEhEgD,IAAgBlD,EAAAA,EAAAA,KAAC+D,EAAAA,EAAMpC,YAAW,CAACE,iBAAkBA,EAAkBD,oBAlBhD3D,UAC1B4E,GAAc,SACYpE,EAAAA,EAAkBuF,OAAO,kBAADrF,OAAmBqE,IACrEnB,IACA4B,IACAZ,GAAc,EAAM,IAchBC,IAAmB9C,EAAAA,EAAAA,KAACnD,EAAAA,EAAe,CAACK,OAAQqG,EAAWpG,WAAYA,EAAYF,WAlDjEgC,IAClB4D,GAAc,GACd7F,IACAyG,GAAU,EA+CiGzG,WAAYA,KAErHgE,EAAAA,EAAAA,MAAA,OAAKD,UAAU,iEAAgEb,SAAA,EAC7Ec,EAAAA,EAAAA,MAAA,OAAKD,UAAU,oCAAmCb,SAAA,EAChDF,EAAAA,EAAAA,KAAA,MAAIe,UAAU,6BAA4Bb,SAAC,iBAC3CF,EAAAA,EAAAA,KAAA,MAAI0B,QAlEIZ,KACdiC,GAAmB,GACnBS,GAAa,EAAM,EAgESzC,UAAU,oJAAmJb,SAAC,gBAEtLc,EAAAA,EAAAA,MAAA,SAAOD,UAAU,4EAA2Eb,SAAA,EAC1FF,EAAAA,EAAAA,KAAA,SAAOe,UAAU,iFAAgFb,UAC/Fc,EAAAA,EAAAA,MAAA,MAAAd,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIiE,MAAM,MAAMlD,UAAU,aAAYb,SAAC,cACvCF,EAAAA,EAAAA,KAAA,MAAIiE,MAAM,MAAMlD,UAAU,aAAYb,SAAC,WACvCF,EAAAA,EAAAA,KAAA,MAAIiE,MAAM,MAAMlD,UAAU,aAAYb,SAAC,UACvCF,EAAAA,EAAAA,KAAA,MAAIiE,MAAM,MAAMlD,UAAU,aAAYb,SAAC,gBACvCF,EAAAA,EAAAA,KAAA,MAAIiE,MAAM,MAAMlD,UAAU,aAAYb,SAAC,cACvCF,EAAAA,EAAAA,KAAA,MAAIiE,MAAM,MAAMlD,UAAU,aAAYb,SAAC,eACvCF,EAAAA,EAAAA,KAAA,MAAIiE,MAAM,MAAMlD,UAAU,aAAYb,SAAC,kBACvCF,EAAAA,EAAAA,KAAA,MAAIiE,MAAM,MAAMlD,UAAU,aAAYb,SAAC,aACvCF,EAAAA,EAAAA,KAAA,MAAIiE,MAAM,MAAMlD,UAAU,aAAYb,SAAC,WACvCF,EAAAA,EAAAA,KAAA,MAAIiE,MAAM,MAAMlD,UAAU,aAAYb,SAAC,YACvCF,EAAAA,EAAAA,KAAA,MAAIiE,MAAM,MAAMlD,UAAU,aAAYb,SAAC,SACvCF,EAAAA,EAAAA,KAAA,MAAIiE,MAAM,MAAMlD,UAAU,aAAYb,SAAC,UACvCF,EAAAA,EAAAA,KAAA,MAAIiE,MAAM,MAAMlD,UAAU,aAAYb,SAAC,qBACvCF,EAAAA,EAAAA,KAAA,MAAIiE,MAAM,MAAMlD,UAAU,aAAYb,SAAC,kBAG3CF,EAAAA,EAAAA,KAAA,SAAAE,UACQ,OAAL9C,QAAK,IAALA,GAAW,QAANqF,EAALrF,EAAO6B,YAAI,IAAAwD,OAAN,EAALA,EAAa7C,QAAS,GAAKxC,EAAM6B,KAAKgC,KAAI,CAACX,EAAM4D,KAChDlD,EAAAA,EAAAA,MAAA,MAAAd,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIe,UAAU,aAAYb,SAAEI,EAAK6D,YACjCnE,EAAAA,EAAAA,KAAA,MAAIe,UAAU,aAAYb,SAAEI,EAAK8D,SACjCpD,EAAAA,EAAAA,MAAA,MAAID,UAAU,aAAYb,SAAA,CAAEI,EAAK+D,WAAW,IAAE/D,EAAKgE,cACnDtE,EAAAA,EAAAA,KAAA,MAAIe,UAAU,aAAYb,SAAEI,EAAKiE,cACjCvE,EAAAA,EAAAA,KAAA,MAAIe,UAAU,aAAYb,SAAEI,EAAKkE,YACjCxE,EAAAA,EAAAA,KAAA,MAAIe,UAAU,aAAYb,SAAEI,EAAKmE,YACjCzE,EAAAA,EAAAA,KAAA,MAAIe,UAAU,aAAYb,SAAEI,EAAKoE,gBACjC1E,EAAAA,EAAAA,KAAA,MAAIe,UAAU,aAAYb,SAAEI,EAAKqE,WACjC3E,EAAAA,EAAAA,KAAA,MAAIe,UAAU,aAAYb,SAAEI,EAAKsE,SACjC5E,EAAAA,EAAAA,KAAA,MAAIe,UAAU,aAAYb,SAAEI,EAAKuE,UACjC7E,EAAAA,EAAAA,KAAA,MAAIe,UAAU,aAAYb,SAAEI,EAAKwE,OACjC9E,EAAAA,EAAAA,KAAA,MAAIe,UAAU,aAAYb,SAAEI,EAAKyE,QACjC/E,EAAAA,EAAAA,KAAA,MAAIe,UAAU,aAAYb,SAAEI,EAAK0E,mBACjChE,EAAAA,EAAAA,MAAA,MAAID,UAAU,UAASb,SAAA,EACrBF,EAAAA,EAAAA,KAAA,KAAG0B,QAASA,IAtDLpB,KACrByC,GAAmB,GACnBF,GAAc,GACdS,EAAchD,GACdkD,GAAa,EAAK,EAkDcyB,CAAc3E,GAAOiC,KAAK,IAAIxB,UAAU,mEAAkEb,SAAC,UAG7HF,EAAAA,EAAAA,KAAA,KAAG0B,QAASA,KAAMwD,OA5EZ9F,EA4EyBkB,EAAKlB,GA3ElD6D,EAAgB7D,QAChB+D,GAAa,GAFO/D,KA4EkC,EAACmD,KAAK,IAAIxB,UAAU,kEAAiEb,SAAC,gBAlBzHgE,eA2Bb,E","sources":["components/ManageUserModal.js","components/Modal.js","components/Users.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport httpClientRequest from '../lib/httpClientRequest'\r\nimport ErrorBoundary from '../ErrorBoundary'\r\nimport { decryptFromStorage, encryptAndStore } from '../lib/SecureStorage'\r\n\r\nconst userData = decryptFromStorage('user')\r\nexport default function ManageUserModal ({\r\n  handleSubmit, closeModal, createUser, update = false,\r\n  updateData = {}\r\n}) {\r\n  const [users, setUsers] = useState([])\r\n  const [fields, setFields] = useState([\r\n    { name: 'username', label: 'Username', value: '' },\r\n    { name: 'email', label: 'Email', value: '' },\r\n    { name: 'first_name', label: 'First Name', value: '' },\r\n    { name: 'last_name', label: 'Last Name', value: '' },\r\n    { name: 'department', label: 'Department', value: '' },\r\n    { name: 'position', label: 'Position', value: '' },\r\n    { name: 'phone_no', label: 'Phone No.', value: '', type: 'number' },\r\n    { name: 'site_address', label: 'Site Address', value: '' },\r\n    { name: 'country', label: 'Country', value: '' },\r\n    { name: 'state', label: 'State', value: '' },\r\n    { name: 'suburb', label: 'SubUrb', value: '' },\r\n    { name: 'expiration_date', label: 'Expiration Date', value: '', type: 'date' },\r\n    { name: 'MFA', label: 'MFA', value: 'No' },\r\n    { name: 'role', label: 'Role', value: 'Guest' }\r\n  ])\r\n\r\n  const addUser = async (e) => {\r\n    e.preventDefault()\r\n    // Create a user object with field values\r\n    const user = {}\r\n    fields.forEach((field) => {\r\n      user[field.name] = field.value\r\n    })\r\n\r\n    setUsers([...users, user])\r\n\r\n    const mappedData = fields.reduce((acc, cur) => {\r\n      return { ...acc, [cur.name]: cur.value }\r\n    }, {})\r\n    mappedData.company_id = userData?.company_id\r\n    console.log('upodate data', userData)\r\n    let result\r\n    if (!update) {\r\n      result = await httpClientRequest.post('user/', mappedData)\r\n    } else {\r\n      result = await httpClientRequest.put(`user?id=${updateData.id}`, mappedData)\r\n    }\r\n    createUser(result)\r\n  }\r\n\r\n  const getDivisionList = async () => {\r\n    const divisionList = await httpClientRequest.get(`/company/division/?company_id=${userData?.company_id}`)\r\n    console.log(divisionList)\r\n    setFields((prevFields) => {\r\n      const updatedFields = [...prevFields]\r\n\r\n      const supplierOwner = prevFields.findIndex((field) => field.name === 'department')\r\n      const owner = []\r\n      divisionList.data.forEach(item => {\r\n        owner.push({ value: item.id, name: item.department_name })\r\n      })\r\n      console.log('owner', owner)\r\n      updatedFields[supplierOwner].options = owner\r\n      updatedFields[supplierOwner].value = owner[0]?.value\r\n      return updatedFields\r\n    })\r\n  }\r\n\r\n  const fetchUserDataForUpdate = async () => {\r\n    try {\r\n      // Use the provided updateData for initializing field values\r\n      setFields((prevFields) => {\r\n        const updatedFields = [...prevFields]\r\n        updatedFields.forEach((field) => {\r\n          field.value = updateData[field.name] || ''\r\n        })\r\n        return updatedFields\r\n      })\r\n    } catch (error) {\r\n      console.error('Error initializing fields for update:', error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRole()\r\n    console.log(update)\r\n    if (update) {\r\n      fetchUserDataForUpdate()\r\n    }\r\n    getDivisionList()\r\n  }, [])\r\n\r\n  const fetchRole = async () => {\r\n    try {\r\n      const userRole = await httpClientRequest.get('http://13.213.6.180:8009/milestone/api/v1/user/role')\r\n      console.log(userRole)\r\n      setFields((prevFields) => {\r\n        const roleFieldIndex = prevFields.findIndex((field) => field.name === 'role')\r\n        const updatedFields = [...prevFields]\r\n        updatedFields[roleFieldIndex].options = userRole?.data\r\n        const MFA = prevFields.findIndex((field) => field.name === 'MFA')\r\n        updatedFields[MFA].options = [{\r\n          name: 'Yes'\r\n        },\r\n        {\r\n          name: 'No'\r\n        }]\r\n\r\n        return updatedFields\r\n      })\r\n    } catch (error) {\r\n      console.error('Error fetching roles:', error)\r\n    }\r\n  }\r\n\r\n  const handleFieldChange = (name, value, type = 'text') => {\r\n    const numericRegex = /^[0-9]*$/\r\n    console.log('type', type)\r\n    if (type === 'number' && !numericRegex.test(value)) return\r\n\r\n    setFields((prevFields) => {\r\n      const fieldIndex = prevFields.findIndex((field) => field.name === name)\r\n      const updatedFields = [...prevFields]\r\n      updatedFields[fieldIndex].value = value\r\n      return updatedFields\r\n    })\r\n  }\r\n\r\n  const closing = () => {\r\n    setFields((prevFields) => {\r\n      const updatedFields = [...prevFields]\r\n      updatedFields.forEach((field) => {\r\n        field.value = ''\r\n      })\r\n      return updatedFields\r\n    })\r\n    closeModal()\r\n  }\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <form onSubmit={(e) => addUser(e)}>\r\n        <div className=\"fixed inset-0 z-10 overflow-y-auto\">\r\n          <div className=\"flex items-end justify-center min-h-screen h-40 pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n            <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n              <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n            </div>\r\n            {/* ... (unchanged code) */}\r\n            <div className=\"inline-block align-bottom bg-white rounded-lg text-left shadow-xl transform transition-all sm:my-8 sm:align-middle w-[70vh]\">\r\n              {/* Modal content */}\r\n              <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4 !important\">\r\n                <div className=\"border p-4\">\r\n                  <h2 className=\"text-lg font-semibold mb-4\">Create a New User</h2>\r\n                  { fields.length > 0 &&\r\n                    fields.map((field) => (\r\n                      <div key={field.name} className=\"mb-4 relative z-0\">\r\n                        {field.options\r\n                          ? (\r\n                            <><label htmlFor={field.name} className=\"absolute text-sm text-textAccent dark:text-green-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto\">{field.label}</label><select\r\n                              id={field.name}\r\n                              value={field.value}\r\n                              onChange={(e) => handleFieldChange(field.name, e.target.value, field.type)}\r\n                              className=\"mt-1 p-2 border rounded w-full\"\r\n                              required\r\n                            >\r\n                              <option disabled key={field.value}>\r\n                                Select {field.label}\r\n                              </option>\r\n                              {field.options.map((option) => (\r\n                                <option key={option.name} value={option.value}>\r\n                                  {option.name}\r\n                                </option>\r\n                              ))}\r\n                            </select></>\r\n                          )\r\n                          : (\r\n                            <div>\r\n                              <div className=\"relative z-0\">\r\n                                <input value={field.value} onChange={(e) => handleFieldChange(field.name, e.target.value, field.type)} type={field.type === 'date' ? 'date' : 'text'} id={field.name} aria-describedby=\"standard_success_help\" className=\"block py-2.5 px-0 w-full text-sm text-textAccent bg-transparent border-0 border-b-2 border-textAccent appearance-none dark:text-white dark:border-green-500 dark:focus:border-green-500 focus:outline-none focus:ring-0 peer\" placeholder=\" \" />\r\n                                <label htmlFor={field.name} className=\"absolute text-sm text-textAccent dark:text-green-500 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:start-0 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6 rtl:peer-focus:translate-x-1/4 rtl:peer-focus:left-auto\">{field.label}</label>\r\n                              </div>\r\n                              {/* <p id=\"standard_success_help\" class=\"mt-2 text-xs text-green-600 dark:text-green-400\"><span class=\"font-medium\">Well done!</span> Some success message.</p> */}\r\n                            </div>\r\n                          )}\r\n                      </div>\r\n                    ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => closing()}\r\n                  className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n                >\r\n            Cancel\r\n                </button>\r\n\r\n                <button type=\"submit\" className=\"bg-blue-500 text-white p-2 rounded\">{(update === true) ? 'Update User' : 'Save User'}</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </ErrorBoundary>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport FileViewer from 'react-file-viewer'\r\n\r\nconst Modal = {\r\n  DeleteModal: ({ handleConfirmDelete, handleCloseModal }) => (\r\n    <div className=\"fixed inset-0 z-10 overflow-y-auto\">\r\n      <div className=\"flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n        <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n          <div className=\"absolute inset-0 bg-gray-500 opacity-75\"></div>\r\n        </div>\r\n\r\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\r\n      &#8203;\r\n        </span>\r\n\r\n        <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full\">\r\n          {/* Modal content */}\r\n          <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n            <div className=\"sm:flex sm:items-start\">\r\n              <div className=\"mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left\">\r\n                <h3 className=\"text-lg font-medium text-gray-900\">Confirm Deletion</h3>\r\n                <div className=\"mt-2\">\r\n                  <p className=\"text-sm text-gray-500\">\r\n                Are you sure you want to delete this item?\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleConfirmDelete}\r\n              className=\"w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-blue-600 text-base font-medium text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:ml-3 sm:w-auto sm:text-sm\"\r\n            >\r\n          Confirm\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCloseModal}\r\n              className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n            >\r\n          Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ),\r\n  PreviewModal: ({ handleDownloadFile, handleCloseModal, ext, path, file }) => (\r\n    <div className=\"fixed inset-0 z-10 overflow-y-auto\">\r\n      <div className=\"flex items-end justify-center min-h-screen h-40 pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n        <div className=\"fixed inset-0 transition-opacity\" aria-hidden=\"true\">\r\n          <div className=\"absolute inset-0 bg-gray-500 opacity-75\" onClick={handleCloseModal}></div>\r\n        </div>\r\n\r\n        <span className=\"hidden sm:inline-block sm:align-middle sm:h-screen\" aria-hidden=\"true\">\r\n      &#8203;\r\n        </span>\r\n\r\n        <div className=\"inline-block align-bottom bg-white rounded-lg text-left shadow-xl transform transition-all sm:my-8 sm:align-middle w-[90vh]\">\r\n          {/* Modal content */}\r\n          <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4 !important\">\r\n            <FileViewer\r\n              fileType={ext}\r\n              filePath={path}\r\n            />\r\n          </div>\r\n          <div className=\"bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleCloseModal}\r\n              className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n            >\r\n          Cancel\r\n            </button>\r\n\r\n            <a\r\n              href={`http://13.213.6.180:8009/milestone/api/v1/file/download/${file}`}\r\n              className=\"mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm\"\r\n            >\r\n          Download\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Modal\r\n","import React, { useEffect, useState } from 'react'\r\nimport ManageUserModal from './ManageUserModal'\r\nimport httpClientRequest from '../lib/httpClientRequest'\r\nimport { decryptFromStorage, encryptAndStore } from '../lib/SecureStorage'\r\nimport Modal from './Modal'\r\nconst UserManagement = () => {\r\n  const [users, setUsers] = useState([])\r\n  const [companyid, setCompanyId] = useState('')\r\n  const [fetchUsers, setFetchUsers] = useState([])\r\n  const [viewCreateModal, setViewCreateModal] = useState(false)\r\n  const [deleteItemId, setDeleteItemId] = useState(null)\r\n  const [isModalOpen, setModalOpen] = useState(false)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [updateData, setupdateData] = useState([])\r\n  const [forUpdate, setForUpdate] = useState([])\r\n\r\n  const addUser = () => {\r\n    setViewCreateModal(true)\r\n    setForUpdate(false)\r\n  }\r\n\r\n  const closeModal = () => {\r\n    setViewCreateModal(false)\r\n    setupdateData([])\r\n    setForUpdate(false)\r\n  }\r\n\r\n  const createUser = (data) => {\r\n    setFetchUsers(true)\r\n    closeModal()\r\n    getUsers()\r\n  }\r\n\r\n  useEffect(() => {\r\n    getUsers()\r\n  }, [setFetchUsers])\r\n\r\n  const getUsers = async () => {\r\n    setFetchUsers(true)\r\n    const companyData = decryptFromStorage('user')\r\n    const userList = await httpClientRequest.get(`/user/?company_id=${companyData.company_id}`)\r\n    if (userList.is_success === false) alert(userList.message)\r\n    setUsers(userList)\r\n    console.log(userList)\r\n    setFetchUsers(false)\r\n  }\r\n\r\n  const handleDelete = (id) => {\r\n    setDeleteItemId(id)\r\n    setModalOpen(true)\r\n  }\r\n\r\n  const handleCloseModal = () => {\r\n    setModalOpen(false)\r\n    setDeleteItemId(null)\r\n    setFetchUsers(false)\r\n  }\r\n\r\n  const handleConfirmDelete = async () => {\r\n    setFetchUsers(true)\r\n    const companyData = await httpClientRequest.delete(`/user/?user_id=${deleteItemId}`)\r\n    handleCloseModal()\r\n    getUsers()\r\n    setFetchUsers(false)\r\n  }\r\n\r\n  const setUpdateData = (user) => {\r\n    setViewCreateModal(true)\r\n    setFetchUsers(true)\r\n    setupdateData(user)\r\n    setForUpdate(true)\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex justify-around h-full w-full bg-secondary p-5\">\r\n      {/* Input Div */}\r\n      {isModalOpen && (<Modal.DeleteModal handleCloseModal={handleCloseModal} handleConfirmDelete={handleConfirmDelete}/>)}\r\n      { viewCreateModal && <ManageUserModal update={forUpdate} updateData={updateData} createUser={createUser} closeModal={closeModal} /> }\r\n      {/* Table Div */}\r\n      <div className=\"border p-4 w-1/2 flex-1 overflow-scroll  rounded-md bg-primary\">\r\n        <div className='flex justify-between items-center'>\r\n          <h2 className=\"text-lg font-semibold mb-4\">Users Table</h2>\r\n          <h2 onClick={addUser} className=\"text-lg font-semibold mb-4 border-2 border-cyan-100 w-28 px-2 hover:bg-primary rounded-md text-center text-slate-600 cursor-pointer text-gray-200\">Add New</h2>\r\n        </div>\r\n        <table className=\"w-full  text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400\">\r\n          <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"border p-2\">Username</th>\r\n              <th scope=\"col\" className=\"border p-2\">Email</th>\r\n              <th scope=\"col\" className=\"border p-2\">Name</th>\r\n              <th scope=\"col\" className=\"border p-2\">Department</th>\r\n              <th scope=\"col\" className=\"border p-2\">Position</th>\r\n              <th scope=\"col\" className=\"border p-2\">Phone No.</th>\r\n              <th scope=\"col\" className=\"border p-2\">Site Address</th>\r\n              <th scope=\"col\" className=\"border p-2\">Country</th>\r\n              <th scope=\"col\" className=\"border p-2\">State</th>\r\n              <th scope=\"col\" className=\"border p-2\">SubUrb</th>\r\n              <th scope=\"col\" className=\"border p-2\">MFA</th>\r\n              <th scope=\"col\" className=\"border p-2\">Role</th>\r\n              <th scope=\"col\" className=\"border p-2\">Expiration Date</th>\r\n              <th scope=\"col\" className=\"border p-2\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users?.data?.length > 0 && users.data.map((user, index) => (\r\n              <tr key={index}>\r\n                <td className=\"border p-2\">{user.username}</td>\r\n                <td className=\"border p-2\">{user.email}</td>\r\n                <td className=\"border p-2\">{user.first_name} {user.last_name}</td>\r\n                <td className=\"border p-2\">{user.department}</td>\r\n                <td className=\"border p-2\">{user.position}</td>\r\n                <td className=\"border p-2\">{user.phone_no}</td>\r\n                <td className=\"border p-2\">{user.site_address}</td>\r\n                <td className=\"border p-2\">{user.country}</td>\r\n                <td className=\"border p-2\">{user.state}</td>\r\n                <td className=\"border p-2\">{user.suburb}</td>\r\n                <td className=\"border p-2\">{user.MFA}</td>\r\n                <td className=\"border p-2\">{user.role}</td>\r\n                <td className=\"border p-2\">{user.expiration_date}</td>\r\n                <td className=\" border\">\r\n                  <a onClick={() => setUpdateData(user)} href=\"#\" className=\"font-medium text-blue-600 dark:text-blue-500 hover:underline p-3\">\r\n                    Edit\r\n                  </a>\r\n                  <a onClick={() => handleDelete(user.id)} href=\"#\" className=\"font-medium text-red-500 dark:text-blue-500 hover:underline p-3\">\r\n                    Delete\r\n                  </a>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserManagement\r\n"],"names":["userData","decryptFromStorage","ManageUserModal","_ref","handleSubmit","closeModal","createUser","update","updateData","users","setUsers","useState","fields","setFields","name","label","value","type","useEffect","fetchRole","console","log","async","prevFields","updatedFields","forEach","field","error","fetchUserDataForUpdate","divisionList","httpClientRequest","get","concat","company_id","_owner$","supplierOwner","findIndex","owner","data","item","push","id","department_name","options","getDivisionList","userRole","roleFieldIndex","handleFieldChange","arguments","length","undefined","test","fieldIndex","_jsx","ErrorBoundary","children","onSubmit","e","preventDefault","user","mappedData","reduce","acc","cur","result","put","post","addUser","className","_jsxs","map","_Fragment","htmlFor","onChange","target","required","disabled","option","placeholder","onClick","DeleteModal","handleConfirmDelete","handleCloseModal","PreviewModal","_ref2","handleDownloadFile","ext","path","file","FileViewer","fileType","filePath","href","UserManagement","_users$data","companyid","setCompanyId","fetchUsers","setFetchUsers","viewCreateModal","setViewCreateModal","deleteItemId","setDeleteItemId","isModalOpen","setModalOpen","isLoading","setIsLoading","setupdateData","forUpdate","setForUpdate","getUsers","companyData","userList","is_success","alert","message","Modal","delete","scope","index","username","email","first_name","last_name","department","position","phone_no","site_address","country","state","suburb","MFA","role","expiration_date","setUpdateData","handleDelete"],"sourceRoot":""}